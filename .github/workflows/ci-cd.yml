name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Clone le dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Préparer Node.js (pour lint/test/standard-version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Set lower case owner name
      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> $GITHUB_ENV
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: Install dependencies
        run: |
          for service in api sender thread; do
            cd $service && npm ci || true
            cd ..
          done

      - name: Lint and Test all services
        run: |
          for service in api sender thread; do
            echo "--- $service ---"
            cd $service
            npm run lint || true
            npm run test || true
            cd ..
          done

      - name: Bump version and generate changelog
        run: |
          npm ci
          npx standard-version
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com

      - name: Push version bump and changelog
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git push --follow-tags origin main

      # Login au GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Build and push Docker images
        run: |
          for service in api sender thread; do
            docker build -t ghcr.io/${OWNER_LC}/forum-$service:${{ github.sha }} ./$service
            docker push ghcr.io/${OWNER_LC}/forum-$service:${{ github.sha }}
          done

      # --- Terraform: init/plan/apply ---
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.3

      - name: Login to Terraform Cloud
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
        run: |
          echo "$TFC_TOKEN" | terraform login --token

      - name: Terraform init
        working-directory: ./terraform
        run: |
          terraform init

      - name: Terraform plan
        working-directory: ./terraform
        run: |
          terraform plan

      - name: Terraform apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve
